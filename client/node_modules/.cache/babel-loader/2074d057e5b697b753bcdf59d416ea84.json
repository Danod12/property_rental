{"ast":null,"code":"var _jsxFileName = \"/Users/danielodriscoll/Web_Development/Final_Project/property_rental/client/src/pages/Update.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport IncomeData from \"../data/income_data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Update() {\n  _s();\n\n  const url = \"http://localhost:3001/update\";\n  const [image, setImage] = useState({\n    preview: \"\",\n    data: \"\"\n  });\n  const [status, setStatus] = useState(\"\");\n  const [incomeVer, setIncomeVer] = useState([]);\n  const [dbID, setDbID] = useState(null);\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/login\").then(response => {\n      if (response.data.loggedIn === true) {\n        setDbID(response.data.user[0].id);\n      }\n    });\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let formData = new FormData();\n    formData.append(\"file\", image.data);\n    const response = await Axios.post(url, formData, {\n      userID: dbID\n    });\n    if (response) setStatus(response.statusText);\n  };\n\n  const handleFileChange = e => {\n    const img = {\n      preview: URL.createObjectURL(e.target.files[0]),\n      data: e.target.files[0]\n    };\n    setImage(img);\n  };\n\n  const transactionData = IncomeData.transactions; //transaction data array\n\n  let monthlyIncome = [];\n  let totalIncome = 0;\n  let averageMonthlyIncome = 0;\n  let janIncome = 0;\n  let febIncome = 0;\n  let marIncome = 0;\n  let aprIncome = 0;\n  let mayIncome = 0;\n  let junIncome = 0;\n  let julyIncome = 0;\n  let augIncome = 0;\n  let septIncome = 0;\n  let octIncome = 0;\n  let novIncome = 0;\n  let decIncome = 0;\n\n  const showIncome = () => {\n    for (let i = 0; i < incomeVer.length; i++) {\n      totalIncome = totalIncome + incomeVer[i];\n    }\n\n    averageMonthlyIncome = totalIncome / 12;\n  };\n\n  const incomeCalc = () => {\n    transactionData.forEach(pullTransactionAmount); //cycling through array with pullTransactionAmount\n\n    setIncomeVer(monthlyIncome);\n  };\n\n  function pullTransactionAmount(item) {\n    const objectHolder = item;\n    const amounts = objectHolder.amount;\n    const dates = objectHolder.date;\n    let trimmedDate = \"\";\n    let trimmedYearDate = \"\";\n    const testString = \"0\";\n    let intDate = null;\n\n    if (dates[5] === testString) {\n      trimmedYearDate = dates.substring(6); //removing the year\n    } else {\n      trimmedYearDate = dates.substring(5); //removing the year\n    }\n\n    trimmedDate = trimmedYearDate.slice(0, -3); //removing day\n\n    intDate = parseInt(trimmedDate);\n\n    if (intDate === 1 && amounts > 0) {\n      janIncome = janIncome + amounts;\n      monthlyIncome[0] = janIncome;\n    } else if (intDate === 2 && amounts > 0) {\n      febIncome = febIncome + amounts;\n      monthlyIncome[1] = febIncome;\n    } else if (intDate === 3 && amounts > 0) {\n      marIncome = marIncome + amounts;\n      monthlyIncome[2] = marIncome;\n    } else if (intDate === 4 && amounts > 0) {\n      aprIncome = aprIncome + amounts;\n      monthlyIncome[3] = aprIncome;\n    } else if (intDate === 5 && amounts > 0) {\n      mayIncome = mayIncome + amounts;\n      monthlyIncome[4] = mayIncome;\n    } else if (intDate === 6 && amounts > 0) {\n      junIncome = junIncome + amounts;\n      monthlyIncome[5] = junIncome;\n    } else if (intDate === 7 && amounts > 0) {\n      julyIncome = julyIncome + amounts;\n      monthlyIncome[6] = julyIncome;\n    } else if (intDate === 8 && amounts > 0) {\n      augIncome = augIncome + amounts;\n      monthlyIncome[7] = augIncome;\n    } else if (intDate === 9 && amounts > 0) {\n      septIncome = septIncome + amounts;\n      monthlyIncome[8] = septIncome;\n    } else if (intDate === 10 && amounts > 0) {\n      octIncome = octIncome + amounts;\n      monthlyIncome[9] = octIncome;\n    } else if (intDate === 11 && amounts > 0) {\n      novIncome = novIncome + amounts;\n      monthlyIncome[10] = novIncome;\n    } else if (intDate === 12 && amounts > 0) {\n      decIncome = decIncome + amounts;\n      monthlyIncome[11] = decIncome;\n    } else {\n      console.log(\"Error in validation\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), status && /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: incomeCalc,\n      children: \" Verify Income\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: showIncome,\n      children: \" Show Income\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Update, \"YkDYB52qODlX3f2kllDghP6qKwA=\");\n\n_c = Update;\nexport default Update;\n\nvar _c;\n\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["React","useEffect","useState","Axios","IncomeData","Update","url","image","setImage","preview","data","status","setStatus","incomeVer","setIncomeVer","dbID","setDbID","get","then","response","loggedIn","user","id","handleSubmit","e","preventDefault","formData","FormData","append","post","userID","statusText","handleFileChange","img","URL","createObjectURL","target","files","transactionData","transactions","monthlyIncome","totalIncome","averageMonthlyIncome","janIncome","febIncome","marIncome","aprIncome","mayIncome","junIncome","julyIncome","augIncome","septIncome","octIncome","novIncome","decIncome","showIncome","i","length","incomeCalc","forEach","pullTransactionAmount","item","objectHolder","amounts","amount","dates","date","trimmedDate","trimmedYearDate","testString","intDate","substring","slice","parseInt","console","log"],"sources":["/Users/danielodriscoll/Web_Development/Final_Project/property_rental/client/src/pages/Update.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport IncomeData from \"../data/income_data.json\";\n\nfunction Update() {\n  const url = \"http://localhost:3001/update\";\n  const [image, setImage] = useState({ preview: \"\", data: \"\" });\n  const [status, setStatus] = useState(\"\");\n  const [incomeVer, setIncomeVer] = useState([]);\n\n  const [dbID, setDbID] = useState(null);\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/login\").then((response) => {\n      if (response.data.loggedIn === true) {\n        setDbID(response.data.user[0].id);\n      }\n    });\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    let formData = new FormData();\n    formData.append(\"file\", image.data);\n    const response = await Axios.post(url, formData, {\n      userID: dbID,\n    });\n\n    if (response) setStatus(response.statusText);\n  };\n\n  const handleFileChange = (e) => {\n    const img = {\n      preview: URL.createObjectURL(e.target.files[0]),\n      data: e.target.files[0],\n    };\n\n    setImage(img);\n  };\n\n  const transactionData = IncomeData.transactions; //transaction data array\n  let monthlyIncome = [];\n  let totalIncome = 0;\n  let averageMonthlyIncome = 0;\n  let janIncome = 0;\n  let febIncome = 0;\n  let marIncome = 0;\n  let aprIncome = 0;\n  let mayIncome = 0;\n  let junIncome = 0;\n  let julyIncome = 0;\n  let augIncome = 0;\n  let septIncome = 0;\n  let octIncome = 0;\n  let novIncome = 0;\n  let decIncome = 0;\n\n  const showIncome = () => {\n    for (let i = 0; i < incomeVer.length; i++) {\n      totalIncome = totalIncome + incomeVer[i];\n    }\n    averageMonthlyIncome = totalIncome / 12;\n  };\n\n  const incomeCalc = () => {\n    transactionData.forEach(pullTransactionAmount); //cycling through array with pullTransactionAmount\n    setIncomeVer(monthlyIncome);\n  };\n\n  function pullTransactionAmount(item) {\n    const objectHolder = item;\n    const amounts = objectHolder.amount;\n    const dates = objectHolder.date;\n    let trimmedDate = \"\";\n    let trimmedYearDate = \"\";\n    const testString = \"0\";\n    let intDate = null;\n\n    if (dates[5] === testString) {\n      trimmedYearDate = dates.substring(6); //removing the year\n    } else {\n      trimmedYearDate = dates.substring(5); //removing the year\n    }\n    trimmedDate = trimmedYearDate.slice(0, -3); //removing day\n    intDate = parseInt(trimmedDate);\n\n    if (intDate === 1 && amounts > 0) {\n      janIncome = janIncome + amounts;\n      monthlyIncome[0] = janIncome;\n    } else if (intDate === 2 && amounts > 0) {\n      febIncome = febIncome + amounts;\n      monthlyIncome[1] = febIncome;\n    } else if (intDate === 3 && amounts > 0) {\n      marIncome = marIncome + amounts;\n      monthlyIncome[2] = marIncome;\n    } else if (intDate === 4 && amounts > 0) {\n      aprIncome = aprIncome + amounts;\n      monthlyIncome[3] = aprIncome;\n    } else if (intDate === 5 && amounts > 0) {\n      mayIncome = mayIncome + amounts;\n      monthlyIncome[4] = mayIncome;\n    } else if (intDate === 6 && amounts > 0) {\n      junIncome = junIncome + amounts;\n      monthlyIncome[5] = junIncome;\n    } else if (intDate === 7 && amounts > 0) {\n      julyIncome = julyIncome + amounts;\n      monthlyIncome[6] = julyIncome;\n    } else if (intDate === 8 && amounts > 0) {\n      augIncome = augIncome + amounts;\n      monthlyIncome[7] = augIncome;\n    } else if (intDate === 9 && amounts > 0) {\n      septIncome = septIncome + amounts;\n      monthlyIncome[8] = septIncome;\n    } else if (intDate === 10 && amounts > 0) {\n      octIncome = octIncome + amounts;\n      monthlyIncome[9] = octIncome;\n    } else if (intDate === 11 && amounts > 0) {\n      novIncome = novIncome + amounts;\n      monthlyIncome[10] = novIncome;\n    } else if (intDate === 12 && amounts > 0) {\n      decIncome = decIncome + amounts;\n      monthlyIncome[11] = decIncome;\n    } else {\n      console.log(\"Error in validation\");\n    }\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"file\" name=\"file\" onChange={handleFileChange} />\n        <button type=\"submit\">Send Image</button>\n      </form>\n      {status && <h4>{status}</h4>}\n\n      <button onClick={incomeCalc}> Verify Income</button>\n      <button onClick={showIncome}> Show Income</button>\n    </div>\n  );\n}\n\nexport default Update;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}